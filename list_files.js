const fs = require('fs');
const {resolve} = require('path');
const {readdir} = require('fs').promises;

async function* getFiles(dir, rootDir) {
    const dirents = await readdir(dir, {withFileTypes: true});
    const dirName = dir.replace(rootDir + "/", '');
    for (const dirent of dirents) {
        let filename = dirent.name;
        const res = resolve(dir, dirent.name);
        if (dirent.isDirectory()) {
            yield* getFiles(res, rootDir);
        } else {
            yield [dirName, filename];
        }
    }
}

const buildFileList = async (dir, outputFile) => {
    const rootDir = resolve(dir, '.');
    const filesGrouped = new Map();
    for await (const f of getFiles(rootDir, rootDir)) {
        console.log(f);
        filesGrouped.get(f[0]) ? filesGrouped.get(f[0]).push(f[1]) : filesGrouped.set(f[0], [f[1]]);
    }
    console.log(filesGrouped);
    const output = {};
    for (const [key, value] of filesGrouped.entries()) {
        output[key] = value;
    }
    let jsonMap = JSON.stringify(output, null, 2);
    const javascriptfile = `/** This file is generated by list_files.js. Do not edit it manually. */\n
export const allLayers = ${jsonMap}`;
    fs.writeFileSync(outputFile, javascriptfile);
}

if (!process.argv[2]) {
    console.log('Please provide a path to a directory')
    process.exit(1)
}

if (!process.argv[3]) {
    console.log('Please provide an output file name')
    process.exit(1)
}


;(async () => await buildFileList(process.argv[2], process.argv[3]))();
